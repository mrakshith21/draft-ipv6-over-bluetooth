



IPv6 Operations                                                N. Elkins
Internet-Draft                                     Inside Products, Inc.
Intended status: Informational                           M. P. Tahiliani
Expires: 12 November 2024                                       R. Mohan
                                                              T. Sankpal
                                                         S. B. Nidamboor
                                                          NITK Surathkal
                                                             11 May 2024


                          IPv6 Over Bluetooth
                   draft-elkins-v6ops-ipv6blt-latest

Abstract

   RFC 7668 and RFC 9159 describe IPv6 over Bluetooth Low Energy
   networks.  However, the potential of this technology has not been
   fully explored.  This document desribes IPv6 over Bluetooth on
   Windows along with an implementation.  It also discusses some use
   cases of this technology beyond BLE networks.

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://mrakshith21.github.io/draft-ipv6-over-bluetooth/draft-elkins-
   v6ops-ipv6blt.html.  Status information for this document may be
   found at https://datatracker.ietf.org/doc/draft-elkins-v6ops-
   ipv6blt/.

   Discussion of this document takes place on the IPv6 Operations
   Working Group mailing list (mailto:v6ops@ietf.org), which is archived
   at https://mailarchive.ietf.org/arch/browse/v6ops/.  Subscribe at
   https://www.ietf.org/mailman/listinfo/v6ops/.

   Source for this draft and an issue tracker can be found at
   https://github.com/mrakshith21/draft-ipv6-over-bluetooth.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 12 November 2024.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
     1.1.  Background
       1.1.1.  Network Topology
       1.1.2.  Address Configuration
       1.1.3.  Header Compression
   2.  Implementation of IPv6 over Bluetooth on Windows
     2.1.  Driver
     2.2.  Packet Processing App
     2.3.  GATT server
   3.  Bluetooth packet layout
   4.  Where is header compression done?
   5.  Comparison with RFC 7668
   6.  Conventions and Definitions
   7.  Security Considerations
   8.  IANA Considerations
   9.  Normative References
   Acknowledgments
   Authors' Addresses

1.  Introduction

   Bluetooth devices can only connect to the Internet using the
   smartphone or a central server as a gateway.  However, it is also
   possible for such devices to operate autonomously using IPv6 over
   Bluetooth.  It is an addition of an IPv6 layer to the Bluetooth
   stack.  The reason IPv6 is chosen, not IPv4, is because it provides
   significantly more individual IP addresses for the anticipated
   billions of bluetooth devices that will make up the Internet of
   Things in the future.

1.1.  Background

   RFC 7668 specifies the standards and guidelines for transmitting IPv6
   packets over Bluetooth Low Energy (BLE) networks.

1.1.1.  Network Topology

   IPv6 over BLE networks form a topology with nodes of two roles,
   central and peripheral.  A central node can manage connections with a
   number of peripheral devices, while a peripheral is usually connected
   only to a central node.  A central node is assumed to be less
   resource-constrained and acts as a border router.  In a typical
   scenario, the BLE network is connected to the Internet through the
   border router, which can forward packets between the nodes and to and
   from the Internet.  The peripheral nodes are connected to each other
   by IPv6 over Bluetooth.  The central node is connected to every
   peripheral node by IPv6 over Bluetooth.

1.1.2.  Address Configuration

   Every node in the topology has to be distinguished from each other.
   This is done by assigning each of the nodes with a unique ipv6 link-
   local address.  All nodes in the network use their MAC address for
   generating the unique IPv6 link local address.  IPv6 link-local
   addresses are 128 bits long.  The address consists of two sections as
   shown in the figure-1, the first 64 bits is used indicating that the
   IPv6 address is a link-local address and is always set to FE80::/64.
   The second half is called the interface ID.  The generation of this
   section is different for different operating systems.

   The device MAC address is used to generate the Interface ID of the
   IPv6 link-local address using EUI-64 (Extended Unique Identifier).
   The steps followed are given below: - The MAC addresses are 48 bits
   long.  This address is split into two equal halves. - The bits FF FE
   are added in between the two halves, hence giving the 64 bit address.
   - Next the 7th bit from the left is flipped, giving the final 64 bit
   Interface ID.

1.1.3.  Header Compression

   Since BLE communication aims to conserve power, IPv6 over BLE
   involves header compression to reduce the size of IPv6 packets.  This
   compression is based on the 6LoWPAN IPv6 header compression as
   specified in RFC 6282.

2.  Implementation of IPv6 over Bluetooth on Windows

   The following are the components involved in the implementation of
   the IPv6 over Bluetooth in Windows operating system.

2.1.  Driver

   The driver acts as a bridge between the Windows TCP/IP network stack
   and the Bluetooth stack.  It filters outgoing IPv6 packets for the
   nodes running in the BLE network.  These packets are then processed
   by the packet processing app.  The driver can also filter incoming
   IPv6 packets and inject them into the TCP/IP stack.

2.2.  Packet Processing App

   This is a core component that is a part of the bridge along with the
   driver.  Firstly, it obtains a link-local address based on the
   Bluetooth address.  It also scans for nearby devices and identifies
   compatible ones.  Then, it subscribes and receives IPv6 packets from
   the driver.  After compressing the header, it transfers the packet
   over to nearby compatible devices.  The packet processing app on the
   other device receives the packet.  If it is for that device, it sends
   it to the driver for inbound injection into the TCP/IP network stack,
   otherwise, sends the packet to each nearby device.

2.3.  GATT server

   The GATT server is started by the packet processing app.  It contains
   the Internet Protocol Support Service (ISPS), which indicates that
   the server supports IPv6 over Bluetooth.  The server runs on all
   nodes, and nodes can act as both client and server depending on
   whether they receive or send the packet.

3.  Bluetooth packet layout

   An IPv6 over BLE packet consists of an IPv6 packet embedded in a
   Bluetooth packet.  It consists of the following:

   +------------------------------+
   | -- Bluetooth L2CAP Protocol      |
   | -- Bluetooth ATT Protocol          |
   | ---- Opcode                                  |
   | ---- Handle                                   |
   | ---- Value                                      |
   | -------- IPv6 Packet                    |
   +------------------------------+

4.  Where is header compression done?

   Header compression is implemented as a library (named 6LoWPAN
   library), not as an operating system layer or module.  The
   compression/decompression code was based on Contiki OS, an open
   source operating system in which 6LoWPAn is implemented as an
   adaptation layer in the network stack.  This is not possible on
   Windows because it is closed source.  Therefore, the concept of an
   adaptation layer is spread across the driver and this module.

   Thus, the header compression code lies in the user space, as a
   library.

   *  While the packet processing app receives a packet from the driver,
      the 6LoWPAN library is called to compress the header, before
      sending it over Bluetooth.

   *  Similarly, when a packet is received over Bluetooth, the 6LoWPAN
      library is called to decompress the header.

5.  Comparison with RFC 7668

   RFC 7668 specifies RFC 6282 for 6LoWPAN - Header compression -
   Fragmentation and reassembly - Stateless auto configuration

   The LoWPAN library of the project fulfills the first and third goals,
   the second goal is automatically performed at the Bluetooth L2CAP
   layer by Windows Bluetooth.  In particular, IPv6 header compression
   is implemented as per RFC 6282, and IPv6 address compression is
   implemented as per RFC 7668.

6.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

7.  Security Considerations

   TODO Security

8.  IANA Considerations

   This document has no IANA actions.

9.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

Acknowledgments

   TODO acknowledge.

Authors' Addresses

   Nalini Elkins
   Inside Products, Inc.
   Email: nalini.elkins@insidethestack.com


   Mohit P. Tahiliani
   NITK Surathkal
   Email: tahiliani@nitk.edu.in


   Rakshith Mohan
   NITK Surathkal
   Email: rakshith21mohan@gmail.com


   Tejas Sankpal
   NITK Surathkal
   Email: tejas@gmail.com


   Shrinidhi Ballal Nidamboor
   NITK Surathkal
   Email: rakshith21mohan@gmail.com
